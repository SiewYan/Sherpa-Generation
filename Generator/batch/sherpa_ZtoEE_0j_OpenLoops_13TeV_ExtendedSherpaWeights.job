#!/bin/sh -f
#
# ---------------------------------------------------------
# LSF parameters
# ---------------------------------------------------------
#
set nonomatch
echo ""
echo "Job is running on `uname -a`"
echo "Job started on `date`"
echo ""
echo "Job has been submitted from : " $LS_SUBCWD
#if ( ${OS} != "Solaris" && ${OS} != "Linux" ) exit
#setenv OS_VERS Linux__2.6
#
#----------------------------------------------------------
# S e t t h e r u n t i m e e n v i r o n m e n t
#----------------------------------------------------------
#
echo "Step 1 : Setting the environment"
#export SCRAM_ARCH=slc6_amd64_gcc493
export SCRAM_ARCH=slc6_amd64_gcc630
export CMSSW_SRC=/afs/cern.ch/work/s/shoh/analysis/SherpaStudies/Sherpa-Generation/CMSSW_9_3_1/src ##terminate at package SherpaGeneration
export CODE_SRC=/afs/cern.ch/work/s/shoh/analysis/SherpaStudies/Sherpa-Generation/CMSSW_9_3_1/src/SherpaGeneration/Generator/batch ##CURRENT
export RUN_CARD=Run.dat_ZtoEE_0j_OpenLoops_13TeV
export SherpackLocation=/eos/user/${USER:0:1}/$USER
export CMSSWRELEASE=CMSSW_9_4_8
export nevent=2000
#rm -rf ${CODE_SRC}/CMSSW_ZtoEE_0j_OpenLoops_13TeV_mphi_INPUT3_mchi_ExtendedSherpaWeights_cfi.py_mhs_INPUT4.job

echo "- - - - - PATH SETTING- - - - -"
echo "SCRAM_ARCH is : " ${SCRAM_ARCH}
echo "Current Directory is : " ${CODE_SRC}
echo "WorkDir is : " ${WORKDIR}
echo "Run card is : " ${RUN_CARD}
echo "Sherpack Location is : " ${SherpackLocation}
echo "Disk space on this batch machine:"
df -h
#
#----------------------------------------------------------
# Run CMSSW
#----------------------------------------------------------
#
echo "Step 2 : Run"
#####################################
# Step-1: #
#####################################
echo "Start Step-1: Generator"
cd ${WORKDIR}
scramv1 project CMSSW ${CMSSWRELEASE}
echo "scramv1 complete"
cd ${CMSSWRELEASE}/src
eval `scramv1 runtime -sh`

#populate with necessary packages.
git cms-addpkg -q GeneratorInterface/SherpaInterface
#copy nessecary files
cp -r ${CMSSW_SRC}/SherpaGeneration .
scram b -j6

#Generate Sherpack
cd SherpaGeneration/Generator/test
scp ../data/${RUN_CARD} .
ls
echo "Running run_MakeSherpaLibs.sh ZtoEE_0j_OpenLoops_13TeV"
sh run_MakeSherpaLibs.sh ZtoEE_0j_OpenLoops_13TeV &> Log_step1
echo "Running run_PrepareSherpaLibs.sh ZtoEE_0j_OpenLoops_13TeV ExtendedSherpaWeights_cfi.py"
sh run_PrepareSherpaLibs.sh ZtoEE_0j_OpenLoops_13TeV ExtendedSherpaWeights_cfi.py &> Log_step2

#copy all library files
mkdir -p ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_crdE.tgz ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV   
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_libs.tgz  ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_MASTER.tgz ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_crss.tgz  ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_logL.tgz  ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_migr.tgz ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV.md5 ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
scp sherpa_ZtoEE_0j_OpenLoops_13TeV_MASTER_cff.py ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV

scp Log_step1 Log_step2 ${SherpackLocation}/SHERPA_ZtoEE_0j_OpenLoops_13TeV
#UNLESS you wanna generate some event file here

#Unpack gridpack and generate events
#echo "untar gridpack"
#tar xf ZtoEE_0j_OpenLoops_13TeV_LO_MZprime-INPUT3_Mhs-INPUT4_Mchi-ExtendedSherpaWeights_cfi.py_gSM-0p25_gDM-1p0_th_0p01_13TeV-madgraph_tarball.tar.xz
#sed "s/reweight=ON/reweight=OFF/g" runcmsgrid.sh > test.sh
#echo "Turn OFF Reweighting"
#echo "Generate events"
##./runcmsgrid.sh ${nevent} 123456 4
#chmod +x test.sh
#./test.sh ${nevent} 123456 4

#cp cmsgrid_final.lhe ${LHE}/ZtoEE_0j_OpenLoops_13TeV_LO_MZprime-INPUT3_Mhs-INPUT4_Mchi-ExtendedSherpaWeights_cfi.py_gSM-0p25_gDM-1p0_th_0p01_13TeV-madgraph.lhe

#
#----------------------------------------------------------
# Clear job and log
#----------------------------------------------------------
#
rm -rf ${CODE_SRC}/Log_*
rm -rf ${CODE_SRC}/LSF*
rm -rf ${CODE_SRC}/core*
rm -rf /afs/cern.ch/user/${USER:0:1}/${USER}/LSF*
cd ${WORKDIR}
rm -rf CMSSW*
echo ""
echo "Job end `date`"
echo ""
exit ${status}
